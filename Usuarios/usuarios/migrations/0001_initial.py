# Generated by Django 5.2.1 on 2025-05-25 18:35

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, help_text='Data e hora em que o registro foi criado.', verbose_name='Data de Criação')),
                ('data_modificacao', models.DateTimeField(auto_now=True, help_text='Data e hora da última modificação do registro.', verbose_name='Data de Modificação')),
                ('nome', models.CharField(help_text='Nome do registro.', max_length=255, verbose_name='Nome')),
                ('cpf_cnpj', models.CharField(error_messages={'unique': 'Já existe um usuário cadastrado com este CPF/CNPJ.'}, help_text='Obrigatório. CPF ou CNPJ único para login.', max_length=14, unique=True, verbose_name='CPF/CNPJ')),
                ('is_active', models.BooleanField(default=True, help_text='Define o status de atividade do usuário. Desmarque esta opção em vez de excluir contas.', verbose_name='Ativo')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa se o usuário pode fazer login no site de administração (admin).', verbose_name='Membro da Equipe (Acesso ao Admin)')),
                ('is_admin', models.BooleanField(default=False, help_text='Designa se o usuário tem privilégios de administrador no sistema. Se True, o usuário terá todas as permissões (is_superuser) e acesso ao admin (is_staff).', verbose_name='Administrador do Sistema')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUsuarios',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('data_criacao', models.DateTimeField(blank=True, editable=False, help_text='Data e hora em que o registro foi criado.', verbose_name='Data de Criação')),
                ('data_modificacao', models.DateTimeField(blank=True, editable=False, help_text='Data e hora da última modificação do registro.', verbose_name='Data de Modificação')),
                ('nome', models.CharField(help_text='Nome do registro.', max_length=255, verbose_name='Nome')),
                ('cpf_cnpj', models.CharField(db_index=True, error_messages={'unique': 'Já existe um usuário cadastrado com este CPF/CNPJ.'}, help_text='Obrigatório. CPF ou CNPJ único para login.', max_length=14, verbose_name='CPF/CNPJ')),
                ('is_active', models.BooleanField(default=True, help_text='Define o status de atividade do usuário. Desmarque esta opção em vez de excluir contas.', verbose_name='Ativo')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa se o usuário pode fazer login no site de administração (admin).', verbose_name='Membro da Equipe (Acesso ao Admin)')),
                ('is_admin', models.BooleanField(default=False, help_text='Designa se o usuário tem privilégios de administrador no sistema. Se True, o usuário terá todas as permissões (is_superuser) e acesso ao admin (is_staff).', verbose_name='Administrador do Sistema')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Usuário',
                'verbose_name_plural': 'historical Usuários',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
